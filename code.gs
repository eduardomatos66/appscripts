function onOpen() {
  const ui = SpreadsheetApp.getUi();
  const menu = ui.createMenu('Lorena');
  menu.addItem('Criar Demonstrativos', 'createNewGoogleDocs')
  menu.addToUi();
}

function createNewGoogleDocs() {
  //This value should be the id of your document template that we created in the last step
  const templateComResponsavel = DriveApp.getFileById('........');
  const templateSemResponsavel = DriveApp.getFileById('........');
  
  //This value should be the id of the folder where you want your completed documents stored
  const destinationFolder = DriveApp.getFolderById('.......')
  //Here we store the sheet as a variable
  const sheet = SpreadsheetApp
    .getActiveSpreadsheet()
    .getSheetByName('Sheet1')
  
  //Now we get all of the values as a 2D array
  const rows = sheet.getDataRange().getValues();
  
  //Start processing each spreadsheet row
  rows.forEach(function(row, index){
    //Here we check if this row is the headers, if so we skip it
    if (index === 0) return;
    //Here we check if a document has already been generated by looking at 'Document Link', if so we skip it
    if (row[19]) return;

    var googleDocTemplate = templateComResponsavel
    if (row[3] === '') {
      googleDocTemplate = templateSemResponsavel
    }
    //Using the row data in a template literal, we make a copy of our template document in our destinationFolder
    const copy = googleDocTemplate.makeCopy(`${row[0]} - ${row[4]} - Declaracao` , destinationFolder)
    //Once we have the copy, we then open it using the DocumentApp
    const doc = DocumentApp.openById(copy.getId())
    //All of the content lives in the body, so we get that for editing
    const body = doc.getBody();
    //In this line we do some friendly date formatting, that may or may not work for you locale
    // const friendlyDate = new Date(row[3]).toLocaleDateString();
    
    //In these lines, we replace our replacement tokens with values from our spreadsheet row
    body.replaceText('{{Nome Paciente}}', row[0]);
    body.replaceText('{{CPF Paciente}}', row[1]);
    body.replaceText('{{Nome Responsavel}}', row[2]);
    body.replaceText('{{CPF Responsavel}}', row[3]);
    body.replaceText('{{Ano Recibo}}', row[4]);
    body.replaceText('{{Valor Jan}}', formatStringCurrency(row[5]));
    body.replaceText('{{Valor Fev}}', formatStringCurrency(row[6]));
    body.replaceText('{{Valor Mar}}', formatStringCurrency(row[7]));
    body.replaceText('{{Valor Abr}}', formatStringCurrency(row[8]));
    body.replaceText('{{Valor Mai}}', formatStringCurrency(row[9]));
    body.replaceText('{{Valor Jun}}', formatStringCurrency(row[10]));
    body.replaceText('{{Valor Jul}}', formatStringCurrency(row[11]));
    body.replaceText('{{Valor Ago}}', formatStringCurrency(row[12]));
    body.replaceText('{{Valor Set}}', formatStringCurrency(row[13]));
    body.replaceText('{{Valor Out}}', formatStringCurrency(row[14]));
    body.replaceText('{{Valor Nov}}', formatStringCurrency(row[15]));
    body.replaceText('{{Valor Dez}}', formatStringCurrency(row[16]));
    body.replaceText('{{Valor Total}}', formatStringCurrency(row[17]));
    body.replaceText('{{Total pago}}', row[18]);
    
    //We make our changes permanent by saving and closing the document
    doc.saveAndClose();
    //Store the url of our new document in a variable
    const url = doc.getUrl();
    //Write that value back to the 'Document Link' column in the spreadsheet. 
    sheet.getRange(index + 1, 20).setValue(url)
  })
  
}

function formatStringCurrency(tempValue) {
  // Description
  return Utilities.formatString("%01.2f", tempValue);
}

